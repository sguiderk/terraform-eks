name: 'Terraform setup and plan'
description: 'Sets up Terraform and creates a plan'
inputs:
  terraform_directory:
    description: 'Directory that holds Terraform code'
    required: true
  terraform_version:
    description: 'Terraform version'
    required: true
    default: 1.9.2
  github_token: 
    description: 'GitHub token for auth'
    required: true
  pr_id:
    description: 'Pull request ID'
    required: true
  aws_role_to_assume:
    description: 'AWS Role to assume'
    required: true
    default: <add-aws-role-arn>
  aws_role_session_name:
    description: 'AWS Role session name'
    required: true
    default: <add-aws-role-session-name>
  aws_region:
    description: 'AWS Region'
    required: true
    default: '<aws-region>'

runs:
  using: "composite"
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}
        terraform_wrapper: false

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws_role_to_assume }}
        role-session-name: ${{ inputs.aws_role_session_name }}
        aws-region: ${{ inputs.aws_region }}

    - name: Terraform Init
      id: init
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        terraform init

    - name: Terraform Plan
      id: plan
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        echo 'plan<<EOF' >> $GITHUB_OUTPUT
        terraform plan -no-color -out=tfplan >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Save Artifact for planing
      id: save-artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.pr_id }}-tf-plan
        path: ${{ inputs.terraform_directory }}

    - name: Comment Plan and do
      id: comment-plan
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ inputs.pr_id }}
        body: |
          Terraform Plan:

          ```
          ${{ steps.plan.outputs.plan }}
          ```

          Plan saved to GH artifacts.
